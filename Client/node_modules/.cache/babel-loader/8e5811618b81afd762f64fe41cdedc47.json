{"ast":null,"code":"var _jsxFileName = \"D:\\\\SourceCode\\\\DirSearch\\\\antd-demo\\\\src\\\\DirTree.js\";\nimport { Tree } from 'antd';\nimport React from 'react';\nimport TreeItem from './TreeItem';\nconst DirectoryTree = Tree.DirectoryTree;\nconst TreeNode = Tree.TreeNode;\n\nclass DirTree extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = (keys, event) => {\n      console.log('Trigger Select', keys, event);\n    };\n\n    this.onExpand = () => {\n      console.log('Trigger Expand');\n    };\n\n    this.rendersubfiles = function (subfile) {\n      if (subfile.SubFiles == null) {\n        return React.createElement(TreeNode, {\n          title: React.createElement(TreeItem, {\n            Name: subfile.Name,\n            TotalSize: subfile.TotalSize,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }),\n          key: subfile.Name,\n          isLeaf: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      } else {\n        let subfilecontent = subfile.SubFiles.map((item, index) => {\n          return this.rendersubfiles(item);\n        });\n        return React.createElement(TreeNode, {\n          title: React.createElement(TreeItem, {\n            Name: subfile.Name,\n            TotalSize: subfile.TotalSize,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }),\n          key: subfile.Name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, subfilecontent);\n      }\n    };\n\n    this.state = {\n      dirinfo: []\n    };\n  }\n\n  render() {\n    if (this.state.dirinfo == null || this.state.dirinfo.length == 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    let content = this.rendersubfiles(this.state.dirinfo);\n    return React.createElement(DirectoryTree, {\n      multiple: true,\n      onSelect: this.onSelect,\n      onExpand: this.onExpand,\n      loadData: this.onLoadData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nexport default DirTree;","map":{"version":3,"sources":["D:\\SourceCode\\DirSearch\\antd-demo\\src\\DirTree.js"],"names":["Tree","React","TreeItem","DirectoryTree","TreeNode","DirTree","Component","constructor","props","onSelect","keys","event","console","log","onExpand","rendersubfiles","subfile","SubFiles","Name","TotalSize","subfilecontent","map","item","index","state","dirinfo","render","length","content","onLoadData"],"mappings":";AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,aAAa,GAAGH,IAAI,CAACG,aAA3B;MACQC,Q,GAAaJ,I,CAAbI,Q;;AAER,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,QAPmB,GAOR,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,IAA9B,EAAoCC,KAApC;AACH,KATkB;;AAAA,SAWnBG,QAXmB,GAWR,MAAM;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,KAbkB;;AAAA,SAiBnBE,cAjBmB,GAiBF,UAAUC,OAAV,EAAmB;AAChC,UAAIA,OAAO,CAACC,QAAR,IAAoB,IAAxB,EAA8B;AAC9B,eAAQ,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAED,OAAO,CAACE,IAAxB;AAA8B,YAAA,SAAS,EAAEF,OAAO,CAACG,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AAA0F,UAAA,GAAG,EAAEH,OAAO,CAACE,IAAvG;AAA6G,UAAA,MAAM,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACC,OAFD,MAEO;AACH,YAAIE,cAAc,GAAGJ,OAAO,CAACC,QAAR,CAAiBI,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxD,iBAAO,KAAKR,cAAL,CAAoBO,IAApB,CAAP;AACF,SAFoB,CAArB;AAGA,eAAQ,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAE,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEN,OAAO,CAACE,IAAxB;AAA8B,YAAA,SAAS,EAAEF,OAAO,CAACG,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB;AAA0F,UAAA,GAAG,EAAEH,OAAO,CAACE,IAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACHE,cADG,CAAR;AAGH;AACJ,KA5BkB;;AAEf,SAAKI,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAE;AADF,KAAX;AAGH;;AA2BDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKF,KAAL,CAAWC,OAAX,IAAsB,IAAtB,IAA8B,KAAKD,KAAL,CAAWC,OAAX,CAAmBE,MAAnB,IAA2B,CAA7D,EAAgE;AAC5D,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AAED,QAAIC,OAAO,GAAG,KAAKb,cAAL,CAAoB,KAAKS,KAAL,CAAWC,OAA/B,CAAd;AACA,WACI,oBAAC,aAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,QAAQ,EAAE,KAAKhB,QAFnB;AAGI,MAAA,QAAQ,EAAE,KAAKK,QAHnB;AAII,MAAA,QAAQ,EAAI,KAAKe,UAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKD,OANL,CADJ;AAUH;;AAjDiC;;AAoDtC,eAAevB,OAAf","sourcesContent":["import { Tree } from 'antd';\r\nimport React from 'react';\r\nimport TreeItem from './TreeItem'\r\n\r\nconst DirectoryTree = Tree.DirectoryTree;\r\nconst { TreeNode } = Tree;\r\n\r\nclass DirTree extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            dirinfo: []\r\n        }\r\n    }\r\n\r\n    onSelect = (keys, event) => {\r\n        console.log('Trigger Select', keys, event);\r\n    };\r\n\r\n    onExpand = () => {\r\n        console.log('Trigger Expand');\r\n    };\r\n\r\n    \r\n\r\n    rendersubfiles = function (subfile) {\r\n        if (subfile.SubFiles == null) {\r\n        return (<TreeNode title={<TreeItem Name={subfile.Name} TotalSize={subfile.TotalSize}></TreeItem>} key={subfile.Name} isLeaf />);\r\n        } else {\r\n            let subfilecontent = subfile.SubFiles.map((item, index) => {\r\n               return(this.rendersubfiles(item));\r\n            });\r\n            return (<TreeNode title={<TreeItem Name={subfile.Name} TotalSize={subfile.TotalSize}></TreeItem>} key={subfile.Name} >\r\n                {subfilecontent}\r\n            </TreeNode>)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        if (this.state.dirinfo == null || this.state.dirinfo.length==0) {\r\n            return (<div></div>);\r\n        }\r\n        \r\n        let content = this.rendersubfiles(this.state.dirinfo)\r\n        return (\r\n            <DirectoryTree\r\n                multiple\r\n                onSelect={this.onSelect}\r\n                onExpand={this.onExpand}\r\n                loadData = {this.onLoadData}\r\n            >\r\n                {content}\r\n            </DirectoryTree>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DirTree;"]},"metadata":{},"sourceType":"module"}