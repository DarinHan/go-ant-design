{"ast":null,"code":"var _jsxFileName = \"D:\\\\SourceCode\\\\DirSearch\\\\antd-demo\\\\src\\\\SearchDt.js\";\nimport React from 'react';\nimport './TreeItem.css';\nimport { Input, Divider } from 'antd';\nimport DirTree from './DirTree.js';\n\nclass SearchDt extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadtreenodes = function (root) {\n      console.log('root' + root);\n      this.setState({\n        url: url\n      });\n      fetch(url, {\n        mode: 'cors'\n      }).then(res => {\n        console.log('res' + res);\n        var t = this;\n        res.json().then(function (data) {\n          console.log(data);\n          t.setState({\n            dirinfo: data\n          });\n        });\n      });\n    };\n\n    this.state = {\n      root: undefined,\n      dirinfo: []\n    };\n  }\n\n  render() {\n    const Search = Input.Search;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Search, {\n      placeholder: \"input search text\",\n      style: {\n        width: 500\n      },\n      enterButton: true,\n      onSearch: value => {\n        console.log(value);\n        this.loadtreenodes(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      dashed: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(DirTree, {\n      dirinfo: this.state.dirinfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SearchDt;","map":{"version":3,"sources":["D:\\SourceCode\\DirSearch\\antd-demo\\src\\SearchDt.js"],"names":["React","Input","Divider","DirTree","SearchDt","Component","constructor","props","loadtreenodes","root","console","log","setState","url","fetch","mode","then","res","t","json","data","dirinfo","state","undefined","render","Search","width","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,MAA/B;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAIA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,aARmB,GAQH,UAAUC,IAAV,EAAgB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAOF,IAAnB;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,GAAG,EAAEA;AAAP,OAAd;AACAC,MAAAA,KAAK,CAACD,GAAD,EAAM;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAN,CAAL,CAA6BC,IAA7B,CAAkCC,GAAG,IAAI;AACrCP,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAQM,GAApB;AACA,YAAIC,CAAC,GAAG,IAAR;AACAD,QAAAA,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAUI,IAAV,EAAgB;AAC5BV,UAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACAF,UAAAA,CAAC,CAACN,QAAF,CAAW;AACPS,YAAAA,OAAO,EAAED;AADF,WAAX;AAGH,SALD;AAMH,OATD;AAUH,KArBkB;;AAEf,SAAKE,KAAL,GAAa;AACTb,MAAAA,IAAI,EAAEc,SADG;AAETF,MAAAA,OAAO,EAAC;AAFC,KAAb;AAIH;;AAkBDG,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAGxB,KAAK,CAACwB,MAArB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,MAAD;AACD,MAAA,WAAW,EAAC,mBADX;AAED,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFN;AAGD,MAAA,WAAW,MAHV;AAID,MAAA,QAAQ,EAAEC,KAAK,IAAI;AACfjB,QAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACA,aAAKnB,aAAL,CAAmBmB,KAAnB;AACH,OAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,EASI,oBAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWD,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAcH;;AAzCkC;;AA4CvC,eAAejB,QAAf","sourcesContent":["import React from 'react';\r\nimport './TreeItem.css';\r\nimport { Input, Divider } from 'antd';\r\nimport DirTree from './DirTree.js'\r\n\r\n\r\n\r\nclass SearchDt extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            root: undefined,\r\n            dirinfo:[]\r\n        }\r\n    }\r\n\r\n    loadtreenodes = function (root) {\r\n        console.log('root'+root)\r\n        this.setState({ url: url });\r\n        fetch(url, { mode: 'cors' }).then(res => {\r\n            console.log('res' + res);\r\n            var t = this;\r\n            res.json().then(function (data) {\r\n                console.log(data);\r\n                t.setState({\r\n                    dirinfo: data\r\n                })\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const Search = Input.Search;\r\n        return (\r\n            <div><Search\r\n                placeholder=\"input search text\"\r\n                style={{ width: 500 }}\r\n                enterButton\r\n                onSearch={value => {\r\n                    console.log(value);\r\n                    this.loadtreenodes(value);\r\n                }}\r\n            />\r\n                <Divider dashed />\r\n                <DirTree dirinfo={this.state.dirinfo}></DirTree>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchDt;"]},"metadata":{},"sourceType":"module"}